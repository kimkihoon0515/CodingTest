# 도저히 모르겠어서 참고했음
import sys

n,m = map(int,sys.stdin.readline().split())

li = []

for _ in range(n):
    li.append(list(map(int,sys.stdin.readline().split())))

tetromino = [
    [(0,0), (0,1), (1,0), (1,1)], # ㅁ
    [(0,0), (0,1), (0,2), (0,3)], # ㅡ
    [(0,0), (1,0), (2,0), (3,0)], # ㅣ
    [(0,0), (0,1), (0,2), (1,0)], # -|
    [(1,0), (1,1), (1,2), (0,2)], # |__|
    [(0,0), (1,0), (1,1), (1,2)], # ㄴ
    [(0,0), (0,1), (0,2), (1,2)], # ㄱ
    [(0,0), (1,0), (2,0), (2,1)], # 긴ㄴ
    [(2,0), (2,1), (1,1), (0,1)], # 긴|_| 
    [(0,0), (0,1), (1,0), (2,0)], # ㄷ
    [(0,0), (0,1), (1,1), (2,1)], # -| 
    [(0,0), (0,1), (0,2), (1,1)], # ㅜ
    [(1,0), (1,1), (1,2), (0,1)], # ㅗ
    [(0,0), (1,0), (2,0), (1,1)], # ㅏ
    [(1,0), (0,1), (1,1), (2,1)], # ㅓ
    [(1,0), (2,0), (0,1), (1,1)], # |--|
    [(0,0), (1,0), (1,1), (2,1)], # |-| 
    [(1,0), (0,1), (1,1), (0,2)], # |-|-
    [(0,0), (0,1), (1,1), (1,2)] # -|_
]

answer = 0

def find(x,y):
    global answer
    for i in range(19): # 테트로미노 모양만큼 반복
        result = 0 # 각 테트로미노의 합산 값
        for j in range(4): # 테트로미노의 좌표
            try:
                nx = x + tetromino[i][j][0] # 현재 위치에서 테트로미노를 놓은 x좌표
                ny = y + tetromino[i][j][1] # 현재 위치에서 테트로미노를 놓은 y좌표
                result += li[nx][ny]  # 결과값에 처음에 입력받았던 수들을 좌표를 비교해서 합산
            except IndexError: # 좌표가 li의 범위를 나가게되면 에러발생함
                continue
        answer = max(answer,result) # 최대값을 answer에 저장한다.

def solve():
    for i in range(n):
        for j in range(m):
            find(i,j)

solve()
print(answer)